# Mini-CRM (CLI) en Go

Un petit CRM en ligne de commande développé en **Go**.  
Il permet de gérer une liste de contacts en mémoire : ajout, suppression, mise à jour, et affichage.

---

## 🚀 Lancer le projet

Placez-vous dans le dossier où se trouvent tous vos fichiers `.go` puis exécutez :

```bash
go run .
⚠️ Ne lancez pas uniquement main.go (ex: go run main.go) car les autres fichiers (add.go, list.go, etc.) ne seraient pas compilés.

📖 Fonctionnalités
Mode interactif (menu en boucle)
Afficher le menu principal

Ajouter un contact (ID, Nom, Email)

Lister tous les contacts

Supprimer un contact par ID

Mettre à jour un contact

Quitter l’application

Astuce : affiche la commande pour ajouter un contact via flags

Ajout via flags (sans passer par le menu)
bash
Copier le code
go run . -add -id 1 -name "Alice" -email "alice@example.com"
Options disponibles :

-add → active le mode ajout par flags

-id → identifiant numérique du contact

-name → nom du contact

-email → email du contact

⚠️ Tous ces champs sont obligatoires lorsque vous utilisez -add.

Exemples :

bash
Copier le code
# Ajout d’un contact Alice
go run . -add -id 1 -name "Alice" -email "alice@example.com"

# Ajout d’un contact Bob
go run . -add -id 2 -name "Bob" -email "bob@test.org"
🛠️ Concepts utilisés
Le projet met en pratique plusieurs idiomes Go :

for {} pour la boucle infinie du menu

switch pour gérer les choix du menu

map[int]Contact pour stocker les contacts

comma ok idiom : vérifier la présence d’une clé dans la map

if err != nil pour la gestion des erreurs

strconv pour convertir les entrées utilisateur

os.Stdin + bufio.NewReader pour lire la saisie

flag pour la gestion des options en ligne de commande

📂 Structure du projet
Tous les fichiers sont dans le même dossier :

main.go → gère le menu principal et la boucle

add.go → fonction pour ajouter un contact

list.go → fonction pour lister tous les contacts

delete.go → fonction pour supprimer un contact

update.go → fonction pour mettre à jour un contact

flags.go → gestion de l’ajout via les flags

contact.go → définition de la structure Contact, stockage, helpers

utils_io.go → utilitaires pour lecture/saisie dans le terminal

error.go → gestion simple d’erreurs formatées

🧩 Améliorations possibles
Sauvegarder/charger les contacts depuis un fichier JSON

Ajouter des sous-commandes (mini-crm add | list | update | delete)

Écrire des tests unitaires (go test) pour valider la logique